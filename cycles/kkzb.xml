<All-Cycles>
<Cycle-2 locks="java/lang/Class sun/reflect/annotation/AnnotationType.class">
<Thread-1>
java/lang/Class.initAnnotationsIfNecessary:()V-sun/reflect/annotation/AnnotationParser.parseAnnotations:([BLsun/reflect/ConstantPool;Ljava/lang/Class;)Ljava/util/Map;-sun/reflect/annotation/AnnotationParser.parseAnnotations2:([BLsun/reflect/ConstantPool;Ljava/lang/Class;)Ljava/util/Map;-sun/reflect/annotation/AnnotationType.getInstance:(Ljava/lang/Class;)Lsun/reflect/annotation/AnnotationType;-sun/reflect/annotation/AnnotationType."init":(Ljava/lang/Class;)V-java/lang/reflect/Method.getDefaultValue:()Ljava/lang/Object;-sun/reflect/annotation/AnnotationParser.parseMemberValue:(Ljava/lang/Class;Ljava/nio/ByteBuffer;Lsun/reflect/ConstantPool;Ljava/lang/Class;)Ljava/lang/Object;-sun/reflect/annotation/AnnotationParser.parseAnnotation:(Ljava/nio/ByteBuffer;Lsun/reflect/ConstantPool;Ljava/lang/Class;Z)Ljava/lang/annotation/Annotation;-sun/reflect/annotation/AnnotationType.getInstance:(Ljava/lang/Class;)Lsun/reflect/annotation/AnnotationType; </Thread-1>
<Thread-1>
java/lang/Class.initAnnotationsIfNecessary:()V-sun/reflect/annotation/AnnotationParser.parseAnnotations:([BLsun/reflect/ConstantPool;Ljava/lang/Class;)Ljava/util/Map;-sun/reflect/annotation/AnnotationParser.parseAnnotations2:([BLsun/reflect/ConstantPool;Ljava/lang/Class;)Ljava/util/Map;-sun/reflect/annotation/AnnotationType.getInstance:(Ljava/lang/Class;)Lsun/reflect/annotation/AnnotationType;
</Thread-1>
<Thread-1>
java/lang/Class.initAnnotationsIfNecessary:()V-sun/reflect/annotation/AnnotationType.getInstance:(Ljava/lang/Class;)Lsun/reflect/annotation/AnnotationType;
</Thread-1>
<Thread-2>
sun/reflect/annotation/AnnotationType.getInstance:(Ljava/lang/Class;)Lsun/reflect/annotation/AnnotationType;-sun/reflect/annotation/AnnotationType."init":(Ljava/lang/Class;)V-java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;-java/lang/Class.initAnnotationsIfNecessary:()V-java/lang/Class.initAnnotationsIfNecessary:()V
</Thread-2>
<Thread-2>
sun/reflect/annotation/AnnotationType.getInstance:(Ljava/lang/Class;)Lsun/reflect/annotation/AnnotationType;-sun/reflect/annotation/AnnotationType."init":(Ljava/lang/Class;)V-java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;-java/lang/Class.initAnnotationsIfNecessary:()V
</Thread-2>
</Cycle-2>
<Cycle-2 locks="sun/font/FontManager.class java/util/Hashtable">
<Thread-1>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-java/util/Hashtable.size:()I
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/java2d/SunGraphicsEnvironment.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZ)V-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.containsKey:(Ljava/lang/Object;)Z
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/java2d/SunGraphicsEnvironment.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZ)V-sun/font/FontManager.registerDeferredFont:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;IZI)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-java/util/Hashtable.size:()I
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZ)V-sun/font/FontManager.addCompositeToFontList:(Lsun/font/CompositeFont;I)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-java/util/Hashtable.size:()I
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.containsKey:(Ljava/lang/Object;)Z
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/java2d/SunGraphicsEnvironment.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZ)V-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.containsKey:(Ljava/lang/Object;)Z
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/java2d/SunGraphicsEnvironment.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZ)V-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.containsKey:(Ljava/lang/Object;)Z
</Thread-1>
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-java/util/Hashtable.size:()I
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.containsKey:(Ljava/lang/Object;)Z
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/java2d/SunGraphicsEnvironment.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZ)V-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/java2d/SunGraphicsEnvironment.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZ)V-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/java2d/SunGraphicsEnvironment.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZ)V-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/java2d/SunGraphicsEnvironment.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZ)V-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/java2d/SunGraphicsEnvironment.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZ)V-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZ)V-sun/font/FontManager.addCompositeToFontList:(Lsun/font/CompositeFont;I)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/java2d/SunGraphicsEnvironment.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZ)V-sun/font/FontManager.registerDeferredFont:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;IZI)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.containsKey:(Ljava/lang/Object;)Z
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.getPathDirs:()V-sun/font/FontManager.getFontPath:(Z)Ljava/lang/String;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.findOtherDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-sun/font/FontManager.resolveFontFiles:(Ljava/util/HashSet;Ljava/util/ArrayList;)V-sun/font/TrueTypeFont.getFontName:(Ljava/util/Locale;)Ljava/lang/String;-sun/font/FontManager.getLCIDFromLocale:(Ljava/util/Locale;)S-sun/font/FontManager.createLCIDMap:()V
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V
</Thread-2>
</Cycle-2>
<Cycle-2 locks="com/sun/jmx/snmp/SnmpVarBindList java/util/Vector">
<Thread-1>
com/sun/jmx/snmp/SnmpVarBindList.removeVarBind:(Lcom/sun/jmx/snmp/SnmpVarBind;)Z-com/sun/jmx/snmp/SnmpVarBindList.removeElement:(Ljava/lang/Object;)Z-java/util/Vector.removeElementAt:(I)V
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/SnmpVarBindList.toVector:(Z)Ljava/util/Vector;-java/util/Vector.clone:()Ljava/lang/Object;
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/SnmpVarBindList.concat:(Ljava/util/Vector;)V-java/util/Vector.size:()I
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/SnmpVarBindList.removeVarBind:(Lcom/sun/jmx/snmp/SnmpVarBind;)Z-com/sun/jmx/snmp/SnmpVarBindList.removeElement:(Ljava/lang/Object;)Z-java/util/Vector.indexOf:(Ljava/lang/Object;)I-java/util/Vector.indexOf:(Ljava/lang/Object;I)I
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/SnmpVarBindList.removeVarBindList:(Lcom/sun/jmx/snmp/SnmpVarBindList;)Z-com/sun/jmx/snmp/SnmpVarBindList.removeElement:(Ljava/lang/Object;)Z-java/util/Vector.removeElementAt:(I)V
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/SnmpVarBindList.removeElement:(Ljava/lang/Object;)Z-java/util/Vector.indexOf:(Ljava/lang/Object;)I-java/util/Vector.indexOf:(Ljava/lang/Object;I)I
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/SnmpVarBindList.removeElement:(Ljava/lang/Object;)Z-java/util/Vector.removeElementAt:(I)V
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/SnmpVarBindList.removeVarBindList:(Lcom/sun/jmx/snmp/SnmpVarBindList;)Z-com/sun/jmx/snmp/SnmpVarBindList.removeElement:(Ljava/lang/Object;)Z-java/util/Vector.indexOf:(Ljava/lang/Object;)I-java/util/Vector.indexOf:(Ljava/lang/Object;I)I
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/SnmpVarBindList.toVector:(Z)Ljava/util/Vector;-java/util/Vector.addElement:(Ljava/lang/Object;)V
</Thread-1>
<Thread-2>
com/sun/jmx/snmp/SnmpVarBindList.setVarBindList:(Ljava/util/Vector;Z)V#java/util/Vector#0-com/sun/jmx/snmp/SnmpVarBindList.setSize:(I)V
</Thread-2>
</Cycle-2>
<Cycle-2 locks="com/sun/jmx/snmp/daemon/SnmpSocket com/sun/jmx/snmp/daemon/SnmpSession">
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.invokeOnResponse:(Ljava/lang/Object;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.queueResponse:()V-com/sun/jmx/snmp/daemon/SnmpSession.addResponse:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpSession.isSessionActive:()Z
</Thread-1>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpSession.destroySession:()V#com/sun/jmx/snmp/daemon/SnmpSession#0-com/sun/jmx/snmp/daemon/SnmpSocket.close:()V
</Thread-2>
</Cycle-2>
<Cycle-2 locks="com/sun/media/sound/RealTimeSequencer$PlayThread com/sun/media/sound/RealTimeSequencer">
<Thread-1>
com/sun/media/sound/RealTimeSequencer$PlayThread.start:()V-com/sun/media/sound/RealTimeSequencer.getTickPosition:()J
</Thread-1>
<Thread-2>
com/sun/media/sound/RealTimeSequencer.start:()V-com/sun/media/sound/RealTimeSequencer.implStart:()V-com/sun/media/sound/RealTimeSequencer$PlayThread.start:()V
</Thread-2>
<Thread-2>
com/sun/media/sound/RealTimeSequencer.stop:()V-com/sun/media/sound/RealTimeSequencer.implStop:()V-com/sun/media/sound/RealTimeSequencer$PlayThread.stop:()V
</Thread-2>
</Cycle-2>
<Cycle-2 locks="sun/security/krb5/internal/rcache/ReplayCache sun/security/krb5/internal/rcache/CacheTable">
<Thread-1>
sun/security/krb5/internal/rcache/ReplayCache.put:(Lsun/security/krb5/internal/rcache/AuthTime;J)V-sun/security/krb5/internal/rcache/CacheTable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-2>
sun/security/krb5/internal/rcache/CacheTable.put:(Ljava/lang/String;Lsun/security/krb5/internal/rcache/AuthTime;J)V-sun/security/krb5/internal/rcache/ReplayCache.put:(Lsun/security/krb5/internal/rcache/AuthTime;J)V
</Thread-2>
</Cycle-2>
<Cycle-2 locks="java/util/Hashtable sun/font/FontFamily.class">
<Thread-1>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-1>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
</Cycle-2>
<Cycle-2 locks="java/util/Hashtable java/util/logging/LogManager">
<Thread-1>
sun/font/FontManager.getCreatedFontFamilyNames:()Ljava/util/TreeMap;#java/util/Hashtable#0-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-1>
<Thread-1>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.getCreatedFontFamilyNames:()Ljava/util/TreeMap;#java/util/Hashtable#0-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-1>
<Thread-2>
java/util/logging/LogManager.getLoggerNames:()Ljava/util/Enumeration;-java/util/Hashtable.keys:()Ljava/util/Enumeration;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.processParentHandlers:(Ljava/util/logging/Logger;Ljava/lang/String;)V-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Hashtable.keys:()Ljava/util/Enumeration;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.processParentHandlers:(Ljava/util/logging/Logger;Ljava/lang/String;)V-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
</Cycle-2>
<Cycle-2 locks="java/util/Hashtable java/util/logging/Logger.class">
<Thread-1>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.getCreatedFontFamilyNames:()Ljava/util/TreeMap;#java/util/Hashtable#0-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.getCreatedFontFamilyNames:()Ljava/util/TreeMap;#java/util/Hashtable#0-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getAnonymousLogger:()Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getAnonymousLogger:()Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
</Cycle-2>
<Cycle-2 locks="com/sun/media/sound/RealTimeSequencer$DataPump com/sun/media/sound/MidiUtils$TempoCache">
<Thread-1>
com/sun/media/sound/RealTimeSequencer$DataPump.pump:()Z-com/sun/media/sound/RealTimeSequencer$DataPump.setTickPos:(J)V-com/sun/media/sound/MidiUtils$TempoCache.getTempoMPQAt:(JF)F
</Thread-1>
<Thread-1>
com/sun/media/sound/RealTimeSequencer$DataPump.setTickPos:(J)V-com/sun/media/sound/MidiUtils$TempoCache.getTempoMPQAt:(JF)F
</Thread-1>
<Thread-2>
com/sun/media/sound/RealTimeSequencer.setMicrosecondPosition:(J)V#com/sun/media/sound/MidiUtils$TempoCache#0-com/sun/media/sound/RealTimeSequencer.setTickPosition:(J)V-com/sun/media/sound/RealTimeSequencer$DataPump.setTickPos:(J)V-com/sun/media/sound/RealTimeSequencer$DataPump.chaseEvents:(JJ)V
</Thread-2>
<Thread-2>
com/sun/media/sound/RealTimeSequencer.setMicrosecondPosition:(J)V#com/sun/media/sound/MidiUtils$TempoCache#0-com/sun/media/sound/RealTimeSequencer.setTickPosition:(J)V-com/sun/media/sound/RealTimeSequencer$DataPump.setTickPos:(J)V
</Thread-2>
<Thread-2>
com/sun/media/sound/RealTimeSequencer.setMicrosecondPosition:(J)V#com/sun/media/sound/MidiUtils$TempoCache#0-com/sun/media/sound/RealTimeSequencer.setTickPosition:(J)V-com/sun/media/sound/RealTimeSequencer$DataPump.setTickPos:(J)V-com/sun/media/sound/RealTimeSequencer$DataPump.setTempoMPQ:(F)V
</Thread-2>
</Cycle-2>
<Cycle-2 locks="com/sun/jmx/snmp/daemon/SendQ com/sun/jmx/snmp/daemon/SnmpInformRequest">
<Thread-1>
com/sun/jmx/snmp/daemon/SendQ.getAllOutstandingRequest:(J)Ljava/util/Vector;-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsNextPollTime:()J
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/daemon/SendQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SnmpInformRequest.getRequestId:()I
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/daemon/SendQ.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsNextPollTime:()J
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/daemon/SendQ.getAllOutstandingRequest:(J)Ljava/util/Vector;-com/sun/jmx/snmp/daemon/SendQ.waitUntilReady:()Z-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsNextPollTime:()J
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/daemon/SendQ.waitUntilReady:()Z-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsNextPollTime:()J
</Thread-1>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpInformRequest.startRequest:(J)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.schedulePoll:()V-com/sun/jmx/snmp/daemon/SnmpQManager.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.getRequestAt:(I)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.elementAt:(I)Ljava/lang/Object;
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpInformRequest.startRequest:(J)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.schedulePoll:()V-com/sun/jmx/snmp/daemon/SnmpQManager.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.size:()I
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpInformRequest.initializeAndFire:()V-com/sun/jmx/snmp/daemon/SnmpInformRequest.startRequest:(J)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.schedulePoll:()V-com/sun/jmx/snmp/daemon/SnmpQManager.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.insertElementAt:(Ljava/lang/Object;I)V
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpInformRequest.initializeAndFire:()V-com/sun/jmx/snmp/daemon/SnmpInformRequest.startRequest:(J)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.schedulePoll:()V-com/sun/jmx/snmp/daemon/SnmpQManager.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpInformRequest.startRequest:(J)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.schedulePoll:()V-com/sun/jmx/snmp/daemon/SnmpQManager.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.notifyClients:()V
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpInformRequest.initializeAndFire:()V-com/sun/jmx/snmp/daemon/SnmpInformRequest.startRequest:(J)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.schedulePoll:()V-com/sun/jmx/snmp/daemon/SnmpQManager.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.size:()I
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpInformRequest.initializeAndFire:()V-com/sun/jmx/snmp/daemon/SnmpInformRequest.startRequest:(J)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.schedulePoll:()V-com/sun/jmx/snmp/daemon/SnmpQManager.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.notifyClients:()V
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpInformRequest.initializeAndFire:()V-com/sun/jmx/snmp/daemon/SnmpInformRequest.startRequest:(J)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.schedulePoll:()V-com/sun/jmx/snmp/daemon/SnmpQManager.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.getRequestAt:(I)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.elementAt:(I)Ljava/lang/Object;
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpInformRequest.startRequest:(J)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.schedulePoll:()V-com/sun/jmx/snmp/daemon/SnmpQManager.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.insertElementAt:(Ljava/lang/Object;I)V
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpInformRequest.startRequest:(J)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.schedulePoll:()V-com/sun/jmx/snmp/daemon/SnmpQManager.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.addElement:(Ljava/lang/Object;)V
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpInformRequest.startRequest:(J)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.schedulePoll:()V-com/sun/jmx/snmp/daemon/SnmpQManager.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpInformRequest.initializeAndFire:()V-com/sun/jmx/snmp/daemon/SnmpInformRequest.startRequest:(J)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.schedulePoll:()V-com/sun/jmx/snmp/daemon/SnmpQManager.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SendQ.addElement:(Ljava/lang/Object;)V
</Thread-2>
</Cycle-2>
<Cycle-2 locks="com/sun/media/sound/MidiUtils$TempoCache com/sun/media/sound/RealTimeSequencer">
<Thread-1>
com/sun/media/sound/RealTimeSequencer.setMicrosecondPosition:(J)V#com/sun/media/sound/MidiUtils$TempoCache#0-com/sun/media/sound/RealTimeSequencer.setTickPosition:(J)V
</Thread-1>
<Thread-2>
com/sun/media/sound/RealTimeSequencer.start:()V-com/sun/media/sound/RealTimeSequencer.implStart:()V-com/sun/media/sound/MidiUtils$TempoCache.refresh:(Ljavax/sound/midi/Sequence;)V
</Thread-2>
<Thread-2>
com/sun/media/sound/RealTimeSequencer.propagateCaches:()V-com/sun/media/sound/MidiUtils$TempoCache.getTempoMPQAt:(J)F-com/sun/media/sound/MidiUtils$TempoCache.getTempoMPQAt:(JF)F
</Thread-2>
<Thread-2>
com/sun/media/sound/RealTimeSequencer.setTickPosition:(J)V-com/sun/media/sound/RealTimeSequencer$DataPump.setTickPos:(J)V-com/sun/media/sound/MidiUtils$TempoCache.getTempoMPQAt:(JF)F
</Thread-2>
<Thread-2>
com/sun/media/sound/RealTimeSequencer.setCaches:()V-com/sun/media/sound/RealTimeSequencer.getTempoInMPQ:()F-com/sun/media/sound/MidiUtils$TempoCache.getTempoMPQAt:(J)F-com/sun/media/sound/MidiUtils$TempoCache.getTempoMPQAt:(JF)F
</Thread-2>
<Thread-2>
com/sun/media/sound/RealTimeSequencer.start:()V-com/sun/media/sound/RealTimeSequencer.implStart:()V-com/sun/media/sound/RealTimeSequencer$PlayThread.start:()V-com/sun/media/sound/MidiUtils$TempoCache.getTempoMPQAt:(J)F-com/sun/media/sound/MidiUtils$TempoCache.getTempoMPQAt:(JF)F
</Thread-2>
<Thread-2>
com/sun/media/sound/RealTimeSequencer.propagateCaches:()V-com/sun/media/sound/MidiUtils$TempoCache."init":(Ljavax/sound/midi/Sequence;)V-com/sun/media/sound/MidiUtils$TempoCache.refresh:(Ljavax/sound/midi/Sequence;)V
</Thread-2>
</Cycle-2>
<Cycle-2 locks="java/awt/Component java/awt/dnd/DropTarget">
<Thread-1>
java/awt/Component.setDropTarget:(Ljava/awt/dnd/DropTarget;)V-java/awt/dnd/DropTarget.setComponent:(Ljava/awt/Component;)V
</Thread-1>
<Thread-2>
java/awt/dnd/DropTarget.setComponent:(Ljava/awt/Component;)V-java/awt/Component.setDropTarget:(Ljava/awt/dnd/DropTarget;)V
</Thread-2>
</Cycle-2>
<Cycle-2 locks="java/util/Stack java/util/Vector">
<Thread-1>
java/util/Stack.removeElement:(Ljava/lang/Object;)Z-java/util/Vector.indexOf:(Ljava/lang/Object;)I-java/util/Vector.indexOf:(Ljava/lang/Object;I)I
</Thread-1>
<Thread-1>
java/util/Stack.search:(Ljava/lang/Object;)I-java/util/Stack.lastIndexOf:(Ljava/lang/Object;)I-java/util/Vector.lastIndexOf:(Ljava/lang/Object;I)I
</Thread-1>
<Thread-1>
java/util/Stack.removeElement:(Ljava/lang/Object;)Z-java/util/Vector.removeElementAt:(I)V
</Thread-1>
<Thread-1>
java/util/Stack.lastIndexOf:(Ljava/lang/Object;)I-java/util/Vector.lastIndexOf:(Ljava/lang/Object;I)I
</Thread-1>
<Thread-2>
java/lang/ClassLoader$NativeLibrary.finalize:()V#java/util/Vector#0-java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;-java/util/Stack.addElement:(Ljava/lang/Object;)V
</Thread-2>
<Thread-2>
java/lang/ClassLoader$NativeLibrary.finalize:()V#java/util/Vector#0-java/util/Stack.pop:()Ljava/lang/Object;-java/util/Stack.removeElementAt:(I)V
</Thread-2>
<Thread-2>
java/lang/ClassLoader.loadLibrary0:(Ljava/lang/Class;Ljava/io/File;)Z#java/util/Vector#0#java/util/Vector#1-java/util/Stack.pop:()Ljava/lang/Object;-java/util/Stack.size:()I
</Thread-2>
<Thread-2>
java/lang/ClassLoader.loadLibrary0:(Ljava/lang/Class;Ljava/io/File;)Z#java/util/Vector#0#java/util/Vector#1-java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;-java/util/Stack.addElement:(Ljava/lang/Object;)V
</Thread-2>
<Thread-2>
java/lang/ClassLoader$NativeLibrary.finalize:()V#java/util/Vector#0-java/util/Stack.pop:()Ljava/lang/Object;-java/util/Stack.peek:()Ljava/lang/Object;-java/util/Stack.size:()I
</Thread-2>
<Thread-2>
java/lang/ClassLoader.loadLibrary0:(Ljava/lang/Class;Ljava/io/File;)Z#java/util/Vector#0#java/util/Vector#1-java/util/Stack.elementAt:(I)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/lang/ClassLoader.loadLibrary0:(Ljava/lang/Class;Ljava/io/File;)Z#java/util/Vector#0#java/util/Vector#1-java/util/Stack.pop:()Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/lang/ClassLoader.loadLibrary0:(Ljava/lang/Class;Ljava/io/File;)Z#java/util/Vector#0#java/util/Vector#1-java/util/Stack.size:()I
</Thread-2>
<Thread-2>
java/lang/ClassLoader.loadLibrary0:(Ljava/lang/Class;Ljava/io/File;)Z#java/util/Vector#0#java/util/Vector#1-java/util/Stack.pop:()Ljava/lang/Object;-java/util/Stack.peek:()Ljava/lang/Object;-java/util/Stack.size:()I
</Thread-2>
<Thread-2>
java/lang/ClassLoader.loadLibrary0:(Ljava/lang/Class;Ljava/io/File;)Z#java/util/Vector#0#java/util/Vector#1-java/util/Stack.pop:()Ljava/lang/Object;-java/util/Stack.removeElementAt:(I)V
</Thread-2>
<Thread-2>
java/lang/ClassLoader$NativeLibrary.finalize:()V#java/util/Vector#0-java/util/Stack.pop:()Ljava/lang/Object;-java/util/Stack.size:()I
</Thread-2>
<Thread-2>
java/lang/ClassLoader$NativeLibrary.finalize:()V#java/util/Vector#0-java/util/Stack.pop:()Ljava/lang/Object;-java/util/Stack.peek:()Ljava/lang/Object;-java/util/Stack.elementAt:(I)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/lang/ClassLoader.loadLibrary0:(Ljava/lang/Class;Ljava/io/File;)Z#java/util/Vector#0#java/util/Vector#1-java/util/Stack.pop:()Ljava/lang/Object;-java/util/Stack.peek:()Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/lang/ClassLoader$NativeLibrary.finalize:()V#java/util/Vector#0-java/util/Stack.pop:()Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/lang/ClassLoader$NativeLibrary.finalize:()V#java/util/Vector#0-java/util/Stack.pop:()Ljava/lang/Object;-java/util/Stack.peek:()Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/lang/ClassLoader.loadLibrary0:(Ljava/lang/Class;Ljava/io/File;)Z#java/util/Vector#0#java/util/Vector#1-java/util/Stack.pop:()Ljava/lang/Object;-java/util/Stack.peek:()Ljava/lang/Object;-java/util/Stack.elementAt:(I)Ljava/lang/Object;
</Thread-2>
</Cycle-2>
<Cycle-2 locks="java/util/Vector javax/swing/plaf/basic/BasicDirectoryModel$DoChangeContents">
<Thread-1>
javax/swing/plaf/basic/BasicDirectoryModel.renameFile:(Ljava/io/File;Ljava/io/File;)Z#java/util/Vector#0-javax/swing/plaf/basic/BasicDirectoryModel.validateFileCache:()V-javax/swing/plaf/basic/BasicDirectoryModel$LoadFilesThread.cancelRunnables:()V-javax/swing/plaf/basic/BasicDirectoryModel$LoadFilesThread.cancelRunnables:(Ljava/util/Vector;)V-javax/swing/plaf/basic/BasicDirectoryModel$DoChangeContents.cancel:()V
</Thread-1>
<Thread-2>
javax/swing/plaf/basic/BasicDirectoryModel$DoChangeContents.run:()V-javax/swing/plaf/basic/BasicDirectoryModel.fireContentsChanged:()V-javax/swing/plaf/basic/BasicDirectoryModel.getSize:()I-java/util/Vector.size:()I
</Thread-2>
<Thread-2>
javax/swing/plaf/basic/BasicDirectoryModel$DoChangeContents.run:()V-java/util/Vector.size:()I
</Thread-2>
</Cycle-2>
<Cycle-3 locks="java/util/Properties java/util/Hashtable java/util/logging/LogManager">
<Thread-1>
java/util/Properties.equals:(Ljava/lang/Object;)Z-java/util/Hashtable.size:()I
</Thread-1>
<Thread-1>
java/util/Properties.putAll:(Ljava/util/Map;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
java/util/Properties.enumerateStringProperties:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-2>
sun/font/FontManager.getCreatedFontFamilyNames:()Ljava/util/TreeMap;#java/util/Hashtable#0-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontManager.getCreatedFontFamilyNames:()Ljava/util/TreeMap;#java/util/Hashtable#0-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-2>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.keys:()Ljava/util/Enumeration;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
</Cycle-3>
<Cycle-3 locks="sun/font/FontManager.class sun/font/FontFamily.class java/util/Hashtable">
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.getPathDirs:()V-sun/font/FontManager.getFontPath:(Z)Ljava/lang/String;
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.findOtherDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-sun/font/FontManager.resolveFontFiles:(Ljava/util/HashSet;Ljava/util/ArrayList;)V-sun/font/TrueTypeFont.getFontName:(Ljava/util/Locale;)Ljava/lang/String;-sun/font/FontManager.getLCIDFromLocale:(Ljava/util/Locale;)S-sun/font/FontManager.createLCIDMap:()V
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V
</Thread-3>
</Cycle-3>
<Cycle-3 locks="sun/font/FontManager.class java/util/logging/LogManager java/util/Hashtable">
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-1>
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-1>
<Thread-1>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-2>
java/util/logging/LogManager.getLoggerNames:()Ljava/util/Enumeration;-java/util/Hashtable.keys:()Ljava/util/Enumeration;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.processParentHandlers:(Ljava/util/logging/Logger;Ljava/lang/String;)V-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Hashtable.keys:()Ljava/util/Enumeration;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.processParentHandlers:(Ljava/util/logging/Logger;Ljava/lang/String;)V-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.getPathDirs:()V-sun/font/FontManager.getFontPath:(Z)Ljava/lang/String;
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.findOtherDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-sun/font/FontManager.resolveFontFiles:(Ljava/util/HashSet;Ljava/util/ArrayList;)V-sun/font/TrueTypeFont.getFontName:(Ljava/util/Locale;)Ljava/lang/String;-sun/font/FontManager.getLCIDFromLocale:(Ljava/util/Locale;)S-sun/font/FontManager.createLCIDMap:()V
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V
</Thread-3>
</Cycle-3>
<Cycle-3 locks="sun/font/FontManager.class java/util/logging/Logger.class java/util/Hashtable">
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getAnonymousLogger:()Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getAnonymousLogger:()Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-2>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.getPathDirs:()V-sun/font/FontManager.getFontPath:(Z)Ljava/lang/String;
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.findOtherDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-sun/font/FontManager.resolveFontFiles:(Ljava/util/HashSet;Ljava/util/ArrayList;)V-sun/font/TrueTypeFont.getFontName:(Ljava/util/Locale;)Ljava/lang/String;-sun/font/FontManager.getLCIDFromLocale:(Ljava/util/Locale;)S-sun/font/FontManager.createLCIDMap:()V
</Thread-3>
<Thread-3>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V
</Thread-3>
</Cycle-3>
<Cycle-3 locks="com/sun/jmx/snmp/daemon/SnmpSocket com/sun/jmx/snmp/daemon/SnmpResponseHandler com/sun/jmx/snmp/daemon/SnmpSession">
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V
</Thread-1>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.invokeOnResponse:(Ljava/lang/Object;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.queueResponse:()V-com/sun/jmx/snmp/daemon/SnmpSession.addResponse:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpSession.isSessionActive:()Z
</Thread-2>
<Thread-3>
com/sun/jmx/snmp/daemon/SnmpSession.destroySession:()V#com/sun/jmx/snmp/daemon/SnmpSession#0-com/sun/jmx/snmp/daemon/SnmpSocket.close:()V
</Thread-3>
</Cycle-3>
<Cycle-3 locks="com/sun/jmx/snmp/daemon/SnmpSocket com/sun/jmx/snmp/daemon/SnmpInformRequest com/sun/jmx/snmp/daemon/SnmpSession">
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.invokeOnResponse:(Ljava/lang/Object;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.queueResponse:()V-com/sun/jmx/snmp/daemon/SnmpSession.addResponse:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.getRequestId:()I
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SnmpInformRequest.getRequestId:()I
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.invokeOnResponse:(Ljava/lang/Object;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.setRequestStatus:(I)V
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SnmpInformRequest.getRequestId:()I
</Thread-1>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpInformRequest.deleteRequest:()V-com/sun/jmx/snmp/daemon/SnmpSession.removeInformRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpInformRequest.constructPduPacket:()Lcom/sun/jmx/snmp/SnmpPdu;-com/sun/jmx/snmp/daemon/SnmpInformRequest.queueResponse:()V-com/sun/jmx/snmp/daemon/SnmpSession.addResponse:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpSession.isSessionActive:()Z
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpInformRequest.deleteRequest:()V-com/sun/jmx/snmp/daemon/SnmpSession.removeInformRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpSession.resetSyncMode:()V
</Thread-2>
<Thread-3>
com/sun/jmx/snmp/daemon/SnmpSession.destroySession:()V#com/sun/jmx/snmp/daemon/SnmpSession#0-com/sun/jmx/snmp/daemon/SnmpSocket.close:()V
</Thread-3>
</Cycle-3>
<Cycle-3 locks="com/sun/media/sound/RealTimeSequencer$PlayThread com/sun/media/sound/MidiUtils$TempoCache com/sun/media/sound/RealTimeSequencer">
<Thread-1>
com/sun/media/sound/RealTimeSequencer$PlayThread.start:()V-com/sun/media/sound/MidiUtils$TempoCache.getTempoMPQAt:(J)F-com/sun/media/sound/MidiUtils$TempoCache.getTempoMPQAt:(JF)F
</Thread-1>
<Thread-2>
com/sun/media/sound/RealTimeSequencer.setMicrosecondPosition:(J)V#com/sun/media/sound/MidiUtils$TempoCache#0-com/sun/media/sound/RealTimeSequencer.setTickPosition:(J)V
</Thread-2>
<Thread-3>
com/sun/media/sound/RealTimeSequencer.start:()V-com/sun/media/sound/RealTimeSequencer.implStart:()V-com/sun/media/sound/RealTimeSequencer$PlayThread.start:()V
</Thread-3>
<Thread-3>
com/sun/media/sound/RealTimeSequencer.stop:()V-com/sun/media/sound/RealTimeSequencer.implStop:()V-com/sun/media/sound/RealTimeSequencer$PlayThread.stop:()V
</Thread-3>
</Cycle-3>
<Cycle-3 locks="java/util/Hashtable sun/font/FontFamily.class java/util/logging/LogManager">
<Thread-1>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-1>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-2>
<Thread-3>
java/util/logging/LogManager.getLoggerNames:()Ljava/util/Enumeration;-java/util/Hashtable.keys:()Ljava/util/Enumeration;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.processParentHandlers:(Ljava/util/logging/Logger;Ljava/lang/String;)V-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Hashtable.keys:()Ljava/util/Enumeration;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.processParentHandlers:(Ljava/util/logging/Logger;Ljava/lang/String;)V-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
</Cycle-3>
<Cycle-3 locks="java/util/Hashtable sun/font/FontFamily.class java/util/logging/Logger.class">
<Thread-1>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-1>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getAnonymousLogger:()Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getAnonymousLogger:()Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
</Cycle-3>
<Cycle-3 locks="java/util/Hashtable java/util/logging/Logger.class java/util/logging/LogManager">
<Thread-1>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.getCreatedFontFamilyNames:()Ljava/util/TreeMap;#java/util/Hashtable#0-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.getCreatedFontFamilyNames:()Ljava/util/TreeMap;#java/util/Hashtable#0-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getAnonymousLogger:()Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-2>
<Thread-3>
java/util/logging/LogManager.getLoggerNames:()Ljava/util/Enumeration;-java/util/Hashtable.keys:()Ljava/util/Enumeration;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.processParentHandlers:(Ljava/util/logging/Logger;Ljava/lang/String;)V-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Hashtable.keys:()Ljava/util/Enumeration;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.processParentHandlers:(Ljava/util/logging/Logger;Ljava/lang/String;)V-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
</Cycle-3>
<Cycle-3 locks="com/sun/media/sound/RealTimeSequencer$DataPump com/sun/media/sound/MidiUtils$TempoCache com/sun/media/sound/RealTimeSequencer">
<Thread-1>
com/sun/media/sound/RealTimeSequencer$DataPump.pump:()Z-com/sun/media/sound/RealTimeSequencer$DataPump.setTickPos:(J)V-com/sun/media/sound/MidiUtils$TempoCache.getTempoMPQAt:(JF)F
</Thread-1>
<Thread-1>
com/sun/media/sound/RealTimeSequencer$DataPump.setTickPos:(J)V-com/sun/media/sound/MidiUtils$TempoCache.getTempoMPQAt:(JF)F
</Thread-1>
<Thread-2>
com/sun/media/sound/RealTimeSequencer.setMicrosecondPosition:(J)V#com/sun/media/sound/MidiUtils$TempoCache#0-com/sun/media/sound/RealTimeSequencer.setTickPosition:(J)V
</Thread-2>
<Thread-3>
com/sun/media/sound/RealTimeSequencer.setTickPosition:(J)V-com/sun/media/sound/RealTimeSequencer$DataPump.setTickPos:(J)V-com/sun/media/sound/RealTimeSequencer$DataPump.chaseEvents:(JJ)V
</Thread-3>
<Thread-3>
com/sun/media/sound/RealTimeSequencer.setTrackMute:(IZ)V-com/sun/media/sound/RealTimeSequencer$DataPump.muteSoloChanged:()V
</Thread-3>
<Thread-3>
com/sun/media/sound/RealTimeSequencer.setTrackSolo:(IZ)V-com/sun/media/sound/RealTimeSequencer$DataPump.muteSoloChanged:()V
</Thread-3>
<Thread-3>
com/sun/media/sound/RealTimeSequencer.setTickPosition:(J)V-com/sun/media/sound/RealTimeSequencer$DataPump.setTickPos:(J)V-com/sun/media/sound/RealTimeSequencer$DataPump.setTempoMPQ:(F)V
</Thread-3>
<Thread-3>
com/sun/media/sound/RealTimeSequencer.propagateCaches:()V-com/sun/media/sound/RealTimeSequencer.setTempoFactor:(F)V-com/sun/media/sound/RealTimeSequencer$DataPump.setTempoFactor:(F)V
</Thread-3>
<Thread-3>
com/sun/media/sound/RealTimeSequencer.propagateCaches:()V-com/sun/media/sound/RealTimeSequencer.setTempoInMPQ:(F)V-com/sun/media/sound/RealTimeSequencer$DataPump.setTempoMPQ:(F)V
</Thread-3>
<Thread-3>
com/sun/media/sound/RealTimeSequencer.start:()V-com/sun/media/sound/RealTimeSequencer.implStart:()V-com/sun/media/sound/RealTimeSequencer$PlayThread.start:()V-com/sun/media/sound/RealTimeSequencer$DataPump.resetLoopCount:()V
</Thread-3>
<Thread-3>
com/sun/media/sound/RealTimeSequencer.start:()V-com/sun/media/sound/RealTimeSequencer.implStart:()V-com/sun/media/sound/RealTimeSequencer$PlayThread.start:()V-com/sun/media/sound/RealTimeSequencer$DataPump.setTempoMPQ:(F)V
</Thread-3>
<Thread-3>
com/sun/media/sound/RealTimeSequencer.setTickPosition:(J)V-com/sun/media/sound/RealTimeSequencer$DataPump.setTickPos:(J)V
</Thread-3>
</Cycle-3>
<Cycle-4 locks="java/util/Properties java/util/Hashtable sun/font/FontManager.class java/util/logging/LogManager">
<Thread-1>
java/util/Properties.equals:(Ljava/lang/Object;)Z-java/util/Hashtable.size:()I
</Thread-1>
<Thread-1>
java/util/Properties.putAll:(Ljava/util/Map;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
java/util/Properties.enumerateStringProperties:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.getPathDirs:()V-sun/font/FontManager.getFontPath:(Z)Ljava/lang/String;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.findOtherDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-sun/font/FontManager.resolveFontFiles:(Ljava/util/HashSet;Ljava/util/ArrayList;)V-sun/font/TrueTypeFont.getFontName:(Ljava/util/Locale;)Ljava/lang/String;-sun/font/FontManager.getLCIDFromLocale:(Ljava/util/Locale;)S-sun/font/FontManager.createLCIDMap:()V
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V
</Thread-2>
<Thread-3>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-3>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-3>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-3>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-3>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-3>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-3>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-3>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-3>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-3>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.keys:()Ljava/util/Enumeration;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
</Cycle-4>
<Cycle-4 locks="java/util/Properties java/util/Hashtable sun/font/FontFamily.class java/util/logging/LogManager">
<Thread-1>
java/util/Properties.equals:(Ljava/lang/Object;)Z-java/util/Hashtable.size:()I
</Thread-1>
<Thread-1>
java/util/Properties.putAll:(Ljava/util/Map;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
java/util/Properties.enumerateStringProperties:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-2>
<Thread-3>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-3>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.keys:()Ljava/util/Enumeration;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
</Cycle-4>
<Cycle-4 locks="java/util/Properties java/util/Hashtable java/util/logging/Logger.class java/util/logging/LogManager">
<Thread-1>
java/util/Properties.equals:(Ljava/lang/Object;)Z-java/util/Hashtable.size:()I
</Thread-1>
<Thread-1>
java/util/Properties.putAll:(Ljava/util/Map;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
java/util/Properties.enumerateStringProperties:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontManager.getCreatedFontFamilyNames:()Ljava/util/TreeMap;#java/util/Hashtable#0-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontManager.getCreatedFontFamilyNames:()Ljava/util/TreeMap;#java/util/Hashtable#0-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getAnonymousLogger:()Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.keys:()Ljava/util/Enumeration;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
</Cycle-4>
<Cycle-4 locks="sun/font/FontManager.class sun/font/FontFamily.class java/util/logging/LogManager java/util/Hashtable">
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-2>
<Thread-3>
java/util/logging/LogManager.getLoggerNames:()Ljava/util/Enumeration;-java/util/Hashtable.keys:()Ljava/util/Enumeration;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.processParentHandlers:(Ljava/util/logging/Logger;Ljava/lang/String;)V-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Hashtable.keys:()Ljava/util/Enumeration;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.processParentHandlers:(Ljava/util/logging/Logger;Ljava/lang/String;)V-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.getPathDirs:()V-sun/font/FontManager.getFontPath:(Z)Ljava/lang/String;
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.findOtherDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-sun/font/FontManager.resolveFontFiles:(Ljava/util/HashSet;Ljava/util/ArrayList;)V-sun/font/TrueTypeFont.getFontName:(Ljava/util/Locale;)Ljava/lang/String;-sun/font/FontManager.getLCIDFromLocale:(Ljava/util/Locale;)S-sun/font/FontManager.createLCIDMap:()V
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V
</Thread-4>
</Cycle-4>
<Cycle-4 locks="sun/font/FontManager.class sun/font/FontFamily.class java/util/logging/Logger.class java/util/Hashtable">
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getAnonymousLogger:()Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getAnonymousLogger:()Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.getPathDirs:()V-sun/font/FontManager.getFontPath:(Z)Ljava/lang/String;
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.findOtherDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-sun/font/FontManager.resolveFontFiles:(Ljava/util/HashSet;Ljava/util/ArrayList;)V-sun/font/TrueTypeFont.getFontName:(Ljava/util/Locale;)Ljava/lang/String;-sun/font/FontManager.getLCIDFromLocale:(Ljava/util/Locale;)S-sun/font/FontManager.createLCIDMap:()V
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V
</Thread-4>
</Cycle-4>
<Cycle-4 locks="sun/font/FontManager.class java/util/logging/Logger.class java/util/logging/LogManager java/util/Hashtable">
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-1>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getAnonymousLogger:()Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-2>
<Thread-3>
java/util/logging/LogManager.getLoggerNames:()Ljava/util/Enumeration;-java/util/Hashtable.keys:()Ljava/util/Enumeration;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.processParentHandlers:(Ljava/util/logging/Logger;Ljava/lang/String;)V-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Hashtable.keys:()Ljava/util/Enumeration;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-3>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.processParentHandlers:(Ljava/util/logging/Logger;Ljava/lang/String;)V-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-3>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.getPathDirs:()V-sun/font/FontManager.getFontPath:(Z)Ljava/lang/String;
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.findOtherDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-sun/font/FontManager.resolveFontFiles:(Ljava/util/HashSet;Ljava/util/ArrayList;)V-sun/font/TrueTypeFont.getFontName:(Ljava/util/Locale;)Ljava/lang/String;-sun/font/FontManager.getLCIDFromLocale:(Ljava/util/Locale;)S-sun/font/FontManager.createLCIDMap:()V
</Thread-4>
<Thread-4>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V
</Thread-4>
</Cycle-4>
<Cycle-4 locks="com/sun/jmx/snmp/daemon/SnmpSocket com/sun/jmx/snmp/daemon/WaitQ com/sun/jmx/snmp/daemon/SnmpInformRequest com/sun/jmx/snmp/daemon/SnmpSession">
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.removeElementAt:(I)V
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.getRequestAt:(I)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.elementAt:(I)Ljava/lang/Object;
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.size:()I
</Thread-1>
<Thread-2>
com/sun/jmx/snmp/daemon/WaitQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SnmpInformRequest.getRequestId:()I
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/WaitQ.getTimeoutRequests:()Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.waitUntilReady:()Z-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsMaxTimeToWait:()J
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/WaitQ.addWaiting:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsMaxTimeToWait:()J
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/WaitQ.waitUntilReady:()Z-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsMaxTimeToWait:()J
</Thread-2>
<Thread-3>
com/sun/jmx/snmp/daemon/SnmpInformRequest.deleteRequest:()V-com/sun/jmx/snmp/daemon/SnmpSession.removeInformRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V
</Thread-3>
<Thread-3>
com/sun/jmx/snmp/daemon/SnmpInformRequest.constructPduPacket:()Lcom/sun/jmx/snmp/SnmpPdu;-com/sun/jmx/snmp/daemon/SnmpInformRequest.queueResponse:()V-com/sun/jmx/snmp/daemon/SnmpSession.addResponse:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpSession.isSessionActive:()Z
</Thread-3>
<Thread-3>
com/sun/jmx/snmp/daemon/SnmpInformRequest.deleteRequest:()V-com/sun/jmx/snmp/daemon/SnmpSession.removeInformRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpSession.resetSyncMode:()V
</Thread-3>
<Thread-4>
com/sun/jmx/snmp/daemon/SnmpSession.destroySession:()V#com/sun/jmx/snmp/daemon/SnmpSession#0-com/sun/jmx/snmp/daemon/SnmpSocket.close:()V
</Thread-4>
</Cycle-4>
<Cycle-4 locks="com/sun/jmx/snmp/daemon/SnmpSocket com/sun/jmx/snmp/daemon/SendQ com/sun/jmx/snmp/daemon/SnmpInformRequest com/sun/jmx/snmp/daemon/SnmpSession">
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.removeElementAt:(I)V
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.size:()I
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;
</Thread-1>
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.getRequestAt:(I)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.elementAt:(I)Ljava/lang/Object;
</Thread-1>
<Thread-2>
com/sun/jmx/snmp/daemon/SendQ.getAllOutstandingRequest:(J)Ljava/util/Vector;-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsNextPollTime:()J
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SendQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SnmpInformRequest.getRequestId:()I
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SendQ.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsNextPollTime:()J
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SendQ.getAllOutstandingRequest:(J)Ljava/util/Vector;-com/sun/jmx/snmp/daemon/SendQ.waitUntilReady:()Z-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsNextPollTime:()J
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SendQ.waitUntilReady:()Z-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsNextPollTime:()J
</Thread-2>
<Thread-3>
com/sun/jmx/snmp/daemon/SnmpInformRequest.deleteRequest:()V-com/sun/jmx/snmp/daemon/SnmpSession.removeInformRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V
</Thread-3>
<Thread-3>
com/sun/jmx/snmp/daemon/SnmpInformRequest.constructPduPacket:()Lcom/sun/jmx/snmp/SnmpPdu;-com/sun/jmx/snmp/daemon/SnmpInformRequest.queueResponse:()V-com/sun/jmx/snmp/daemon/SnmpSession.addResponse:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpSession.isSessionActive:()Z
</Thread-3>
<Thread-3>
com/sun/jmx/snmp/daemon/SnmpInformRequest.deleteRequest:()V-com/sun/jmx/snmp/daemon/SnmpSession.removeInformRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpSession.resetSyncMode:()V
</Thread-3>
<Thread-4>
com/sun/jmx/snmp/daemon/SnmpSession.destroySession:()V#com/sun/jmx/snmp/daemon/SnmpSession#0-com/sun/jmx/snmp/daemon/SnmpSocket.close:()V
</Thread-4>
</Cycle-4>
<Cycle-4 locks="com/sun/jmx/snmp/daemon/SnmpSocket com/sun/jmx/snmp/daemon/SnmpResponseHandler com/sun/jmx/snmp/daemon/SnmpInformRequest com/sun/jmx/snmp/daemon/SnmpSession">
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V
</Thread-1>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.invokeOnResponse:(Ljava/lang/Object;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.setRequestStatus:(I)V
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.invokeOnResponse:(Ljava/lang/Object;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.queueResponse:()V-com/sun/jmx/snmp/daemon/SnmpSession.addResponse:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.getRequestId:()I
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SnmpInformRequest.getRequestId:()I
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SnmpInformRequest.getRequestId:()I
</Thread-2>
<Thread-3>
com/sun/jmx/snmp/daemon/SnmpInformRequest.deleteRequest:()V-com/sun/jmx/snmp/daemon/SnmpSession.removeInformRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V
</Thread-3>
<Thread-3>
com/sun/jmx/snmp/daemon/SnmpInformRequest.constructPduPacket:()Lcom/sun/jmx/snmp/SnmpPdu;-com/sun/jmx/snmp/daemon/SnmpInformRequest.queueResponse:()V-com/sun/jmx/snmp/daemon/SnmpSession.addResponse:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpSession.isSessionActive:()Z
</Thread-3>
<Thread-3>
com/sun/jmx/snmp/daemon/SnmpInformRequest.deleteRequest:()V-com/sun/jmx/snmp/daemon/SnmpSession.removeInformRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpSession.resetSyncMode:()V
</Thread-3>
<Thread-4>
com/sun/jmx/snmp/daemon/SnmpSession.destroySession:()V#com/sun/jmx/snmp/daemon/SnmpSession#0-com/sun/jmx/snmp/daemon/SnmpSocket.close:()V
</Thread-4>
</Cycle-4>
<Cycle-4 locks="com/sun/media/sound/RealTimeSequencer$PlayThread com/sun/media/sound/RealTimeSequencer$DataPump com/sun/media/sound/MidiUtils$TempoCache com/sun/media/sound/RealTimeSequencer">
<Thread-1>
com/sun/media/sound/RealTimeSequencer$PlayThread.setSequence:(Ljavax/sound/midi/Sequence;)V-com/sun/media/sound/RealTimeSequencer$DataPump.setSequence:(Ljavax/sound/midi/Sequence;)V-com/sun/media/sound/RealTimeSequencer$DataPump.muteSoloChanged:()V
</Thread-1>
<Thread-1>
com/sun/media/sound/RealTimeSequencer$PlayThread.setSequence:(Ljavax/sound/midi/Sequence;)V-com/sun/media/sound/RealTimeSequencer$DataPump.setSequence:(Ljavax/sound/midi/Sequence;)V
</Thread-1>
<Thread-1>
com/sun/media/sound/RealTimeSequencer$PlayThread.start:()V-com/sun/media/sound/RealTimeSequencer$DataPump.setTempoMPQ:(F)V
</Thread-1>
<Thread-1>
com/sun/media/sound/RealTimeSequencer$PlayThread.setSequence:(Ljavax/sound/midi/Sequence;)V-com/sun/media/sound/RealTimeSequencer$DataPump.setSequence:(Ljavax/sound/midi/Sequence;)V-com/sun/media/sound/RealTimeSequencer$DataPump.init:()V
</Thread-1>
<Thread-1>
com/sun/media/sound/RealTimeSequencer$PlayThread.start:()V-com/sun/media/sound/RealTimeSequencer$DataPump.resetLoopCount:()V
</Thread-1>
<Thread-2>
com/sun/media/sound/RealTimeSequencer$DataPump.pump:()Z-com/sun/media/sound/RealTimeSequencer$DataPump.setTickPos:(J)V-com/sun/media/sound/MidiUtils$TempoCache.getTempoMPQAt:(JF)F
</Thread-2>
<Thread-2>
com/sun/media/sound/RealTimeSequencer$DataPump.setTickPos:(J)V-com/sun/media/sound/MidiUtils$TempoCache.getTempoMPQAt:(JF)F
</Thread-2>
<Thread-3>
com/sun/media/sound/RealTimeSequencer.setMicrosecondPosition:(J)V#com/sun/media/sound/MidiUtils$TempoCache#0-com/sun/media/sound/RealTimeSequencer.setTickPosition:(J)V
</Thread-3>
<Thread-4>
com/sun/media/sound/RealTimeSequencer.start:()V-com/sun/media/sound/RealTimeSequencer.implStart:()V-com/sun/media/sound/RealTimeSequencer$PlayThread.start:()V
</Thread-4>
<Thread-4>
com/sun/media/sound/RealTimeSequencer.stop:()V-com/sun/media/sound/RealTimeSequencer.implStop:()V-com/sun/media/sound/RealTimeSequencer$PlayThread.stop:()V
</Thread-4>
</Cycle-4>
<Cycle-4 locks="java/util/Hashtable sun/font/FontFamily.class java/util/logging/Logger.class java/util/logging/LogManager">
<Thread-1>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-1>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getAnonymousLogger:()Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-4>
java/util/logging/LogManager.getLoggerNames:()Ljava/util/Enumeration;-java/util/Hashtable.keys:()Ljava/util/Enumeration;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.processParentHandlers:(Ljava/util/logging/Logger;Ljava/lang/String;)V-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Hashtable.keys:()Ljava/util/Enumeration;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.processParentHandlers:(Ljava/util/logging/Logger;Ljava/lang/String;)V-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
</Cycle-4>
<Cycle-5 locks="java/util/Properties java/util/Hashtable sun/font/FontManager.class sun/font/FontFamily.class java/util/logging/LogManager">
<Thread-1>
java/util/Properties.equals:(Ljava/lang/Object;)Z-java/util/Hashtable.size:()I
</Thread-1>
<Thread-1>
java/util/Properties.putAll:(Ljava/util/Map;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
java/util/Properties.enumerateStringProperties:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.getPathDirs:()V-sun/font/FontManager.getFontPath:(Z)Ljava/lang/String;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.findOtherDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-sun/font/FontManager.resolveFontFiles:(Ljava/util/HashSet;Ljava/util/ArrayList;)V-sun/font/TrueTypeFont.getFontName:(Ljava/util/Locale;)Ljava/lang/String;-sun/font/FontManager.getLCIDFromLocale:(Ljava/util/Locale;)S-sun/font/FontManager.createLCIDMap:()V
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V
</Thread-2>
<Thread-3>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-3>
<Thread-3>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-3>
<Thread-3>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-3>
<Thread-3>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-3>
<Thread-3>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-3>
<Thread-3>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-3>
<Thread-3>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-3>
<Thread-3>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-3>
<Thread-3>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-3>
<Thread-4>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-4>
<Thread-4>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-4>
<Thread-4>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-4>
<Thread-4>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-4>
<Thread-5>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V
</Thread-5>
<Thread-5>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.keys:()Ljava/util/Enumeration;
</Thread-5>
<Thread-5>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V
</Thread-5>
<Thread-5>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-5>
</Cycle-5>
<Cycle-5 locks="java/util/Properties java/util/Hashtable sun/font/FontManager.class java/util/logging/Logger.class java/util/logging/LogManager">
<Thread-1>
java/util/Properties.equals:(Ljava/lang/Object;)Z-java/util/Hashtable.size:()I
</Thread-1>
<Thread-1>
java/util/Properties.putAll:(Ljava/util/Map;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
java/util/Properties.enumerateStringProperties:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.getPathDirs:()V-sun/font/FontManager.getFontPath:(Z)Ljava/lang/String;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.findOtherDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-sun/font/FontManager.resolveFontFiles:(Ljava/util/HashSet;Ljava/util/ArrayList;)V-sun/font/TrueTypeFont.getFontName:(Ljava/util/Locale;)Ljava/lang/String;-sun/font/FontManager.getLCIDFromLocale:(Ljava/util/Locale;)S-sun/font/FontManager.createLCIDMap:()V
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V
</Thread-2>
<Thread-3>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.preferLocaleFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.preferProportionalFonts:()V-sun/java2d/SunGraphicsEnvironment.createCompositeFonts:(Ljava/util/Hashtable;ZZ)V-sun/java2d/SunGraphicsEnvironment.initCompositeFonts:(Lsun/awt/FontConfiguration;Ljava/util/Hashtable;)V-sun/font/FontManager.registerCompositeFont:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;I[I[IZLjava/util/Hashtable;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;-java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;-java/util/regex/Pattern."init":(Ljava/lang/String;I)V-java/util/regex/Pattern.compile:()V-java/util/regex/Pattern.expr:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.sequence:(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;-java/util/regex/Pattern.family:(Z)Ljava/util/regex/Pattern$CharProperty;-java/util/regex/Pattern.unicodeBlockPropertyFor:(Ljava/lang/String;)Ljava/util/regex/Pattern$CharProperty;-java/lang/Character$UnicodeBlock.forName:(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;-java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toUpperCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-4>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-4>
<Thread-4>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-4>
<Thread-4>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-4>
<Thread-4>
java/util/logging/Logger.getAnonymousLogger:()Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-4>
<Thread-4>
java/util/logging/Logger.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-4>
<Thread-4>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-4>
<Thread-5>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V
</Thread-5>
<Thread-5>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.keys:()Ljava/util/Enumeration;
</Thread-5>
<Thread-5>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V
</Thread-5>
<Thread-5>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-5>
</Cycle-5>
<Cycle-5 locks="java/util/Properties java/util/Hashtable sun/font/FontFamily.class java/util/logging/Logger.class java/util/logging/LogManager">
<Thread-1>
java/util/Properties.equals:(Ljava/lang/Object;)Z-java/util/Hashtable.size:()I
</Thread-1>
<Thread-1>
java/util/Properties.putAll:(Ljava/util/Map;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
java/util/Properties.enumerateStringProperties:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-2>
<Thread-3>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-4>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-4>
<Thread-4>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-4>
<Thread-4>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-4>
<Thread-4>
java/util/logging/Logger.getAnonymousLogger:()Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-4>
<Thread-4>
java/util/logging/Logger.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-4>
<Thread-4>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-4>
<Thread-5>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V
</Thread-5>
<Thread-5>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.keys:()Ljava/util/Enumeration;
</Thread-5>
<Thread-5>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V
</Thread-5>
<Thread-5>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-5>
</Cycle-5>
<Cycle-5 locks="sun/font/FontManager.class sun/font/FontFamily.class java/util/logging/Logger.class java/util/logging/LogManager java/util/Hashtable">
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-1>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-1>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-1>
<Thread-1>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-1>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-2>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-2>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getAnonymousLogger:()Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-3>
<Thread-3>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-3>
<Thread-4>
java/util/logging/LogManager.getLoggerNames:()Ljava/util/Enumeration;-java/util/Hashtable.keys:()Ljava/util/Enumeration;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.processParentHandlers:(Ljava/util/logging/Logger;Ljava/lang/String;)V-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Hashtable.keys:()Ljava/util/Enumeration;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLevelProperty:(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;-java/util/logging/LogManager.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-4>
java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z-java/util/logging/LogManager.processParentHandlers:(Ljava/util/logging/Logger;Ljava/lang/String;)V-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-4>
<Thread-5>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;
</Thread-5>
<Thread-5>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V
</Thread-5>
<Thread-5>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-5>
<Thread-5>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.getPathDirs:()V-sun/font/FontManager.getFontPath:(Z)Ljava/lang/String;
</Thread-5>
<Thread-5>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.findOtherDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-5>
<Thread-5>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-sun/font/FontManager.resolveFontFiles:(Ljava/util/HashSet;Ljava/util/ArrayList;)V-sun/font/TrueTypeFont.getFontName:(Ljava/util/Locale;)Ljava/lang/String;-sun/font/FontManager.getLCIDFromLocale:(Ljava/util/Locale;)S-sun/font/FontManager.createLCIDMap:()V
</Thread-5>
<Thread-5>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V
</Thread-5>
</Cycle-5>
<Cycle-5 locks="com/sun/jmx/snmp/daemon/SnmpSocket com/sun/jmx/snmp/daemon/SnmpResponseHandler com/sun/jmx/snmp/daemon/WaitQ com/sun/jmx/snmp/daemon/SnmpInformRequest com/sun/jmx/snmp/daemon/SnmpSession">
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V
</Thread-1>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.size:()I
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.getRequestAt:(I)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.elementAt:(I)Ljava/lang/Object;
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.removeElementAt:(I)V
</Thread-2>
<Thread-3>
com/sun/jmx/snmp/daemon/WaitQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SnmpInformRequest.getRequestId:()I
</Thread-3>
<Thread-3>
com/sun/jmx/snmp/daemon/WaitQ.getTimeoutRequests:()Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/WaitQ.waitUntilReady:()Z-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsMaxTimeToWait:()J
</Thread-3>
<Thread-3>
com/sun/jmx/snmp/daemon/WaitQ.addWaiting:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsMaxTimeToWait:()J
</Thread-3>
<Thread-3>
com/sun/jmx/snmp/daemon/WaitQ.waitUntilReady:()Z-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsMaxTimeToWait:()J
</Thread-3>
<Thread-4>
com/sun/jmx/snmp/daemon/SnmpInformRequest.deleteRequest:()V-com/sun/jmx/snmp/daemon/SnmpSession.removeInformRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V
</Thread-4>
<Thread-4>
com/sun/jmx/snmp/daemon/SnmpInformRequest.constructPduPacket:()Lcom/sun/jmx/snmp/SnmpPdu;-com/sun/jmx/snmp/daemon/SnmpInformRequest.queueResponse:()V-com/sun/jmx/snmp/daemon/SnmpSession.addResponse:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpSession.isSessionActive:()Z
</Thread-4>
<Thread-4>
com/sun/jmx/snmp/daemon/SnmpInformRequest.deleteRequest:()V-com/sun/jmx/snmp/daemon/SnmpSession.removeInformRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpSession.resetSyncMode:()V
</Thread-4>
<Thread-5>
com/sun/jmx/snmp/daemon/SnmpSession.destroySession:()V#com/sun/jmx/snmp/daemon/SnmpSession#0-com/sun/jmx/snmp/daemon/SnmpSocket.close:()V
</Thread-5>
</Cycle-5>
<Cycle-5 locks="com/sun/jmx/snmp/daemon/SnmpSocket com/sun/jmx/snmp/daemon/SnmpResponseHandler com/sun/jmx/snmp/daemon/SendQ com/sun/jmx/snmp/daemon/SnmpInformRequest com/sun/jmx/snmp/daemon/SnmpSession">
<Thread-1>
com/sun/jmx/snmp/daemon/SnmpSocket.handleDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V
</Thread-1>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.size:()I
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.getRequestAt:(I)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.elementAt:(I)Ljava/lang/Object;
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;
</Thread-2>
<Thread-2>
com/sun/jmx/snmp/daemon/SnmpResponseHandler.processDatagram:(Ljava/net/DatagramPacket;)V-com/sun/jmx/snmp/daemon/SnmpQManager.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SendQ.removeElementAt:(I)V
</Thread-2>
<Thread-3>
com/sun/jmx/snmp/daemon/SendQ.getAllOutstandingRequest:(J)Ljava/util/Vector;-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsNextPollTime:()J
</Thread-3>
<Thread-3>
com/sun/jmx/snmp/daemon/SendQ.removeRequest:(J)Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;-com/sun/jmx/snmp/daemon/SnmpInformRequest.getRequestId:()I
</Thread-3>
<Thread-3>
com/sun/jmx/snmp/daemon/SendQ.addRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsNextPollTime:()J
</Thread-3>
<Thread-3>
com/sun/jmx/snmp/daemon/SendQ.getAllOutstandingRequest:(J)Ljava/util/Vector;-com/sun/jmx/snmp/daemon/SendQ.waitUntilReady:()Z-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsNextPollTime:()J
</Thread-3>
<Thread-3>
com/sun/jmx/snmp/daemon/SendQ.waitUntilReady:()Z-com/sun/jmx/snmp/daemon/SnmpInformRequest.getAbsNextPollTime:()J
</Thread-3>
<Thread-4>
com/sun/jmx/snmp/daemon/SnmpInformRequest.deleteRequest:()V-com/sun/jmx/snmp/daemon/SnmpSession.removeInformRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V
</Thread-4>
<Thread-4>
com/sun/jmx/snmp/daemon/SnmpInformRequest.constructPduPacket:()Lcom/sun/jmx/snmp/SnmpPdu;-com/sun/jmx/snmp/daemon/SnmpInformRequest.queueResponse:()V-com/sun/jmx/snmp/daemon/SnmpSession.addResponse:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpSession.isSessionActive:()Z
</Thread-4>
<Thread-4>
com/sun/jmx/snmp/daemon/SnmpInformRequest.deleteRequest:()V-com/sun/jmx/snmp/daemon/SnmpSession.removeInformRequest:(Lcom/sun/jmx/snmp/daemon/SnmpInformRequest;)V-com/sun/jmx/snmp/daemon/SnmpSession.resetSyncMode:()V
</Thread-4>
<Thread-5>
com/sun/jmx/snmp/daemon/SnmpSession.destroySession:()V#com/sun/jmx/snmp/daemon/SnmpSession#0-com/sun/jmx/snmp/daemon/SnmpSocket.close:()V
</Thread-5>
</Cycle-5>
<Cycle-6 locks="java/util/Properties java/util/Hashtable sun/font/FontManager.class sun/font/FontFamily.class java/util/logging/Logger.class java/util/logging/LogManager">
<Thread-1>
java/util/Properties.equals:(Ljava/lang/Object;)Z-java/util/Hashtable.size:()I
</Thread-1>
<Thread-1>
java/util/Properties.putAll:(Ljava/util/Map;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
java/util/Properties.enumerateStringProperties:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-1>
java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
</Thread-1>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.registerFontFile:(Ljava/lang/String;[Ljava/lang/String;IZI)Lsun/font/PhysicalFont;-sun/font/FontManager.addToFontList:(Lsun/font/PhysicalFont;I)Lsun/font/PhysicalFont;-sun/font/FontManager.replaceFont:(Lsun/font/PhysicalFont;Lsun/font/PhysicalFont;)V
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findJREDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.getPathDirs:()V-sun/font/FontManager.getFontPath:(Z)Ljava/lang/String;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.findOtherDeferredFont:(Ljava/lang/String;I)Lsun/font/PhysicalFont;-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFontFromPlatform:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.getFullNameToFileMap:()Ljava/util/HashMap;-sun/font/FontManager.resolveWindowsFonts:()V-sun/font/FontManager.resolveFontFiles:(Ljava/util/HashSet;Ljava/util/ArrayList;)V-sun/font/TrueTypeFont.getFontName:(Ljava/util/Locale;)Ljava/lang/String;-sun/font/FontManager.getLCIDFromLocale:(Ljava/util/Locale;)S-sun/font/FontManager.createLCIDMap:()V
</Thread-2>
<Thread-2>
sun/print/PathGraphics.printedSimpleGlyphVector:(Ljava/awt/font/GlyphVector;FF)Z#java/util/Hashtable#1-sun/font/CompositeFont.getSlotFont:(I)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V
</Thread-2>
<Thread-3>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-3>
<Thread-3>
sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-3>
<Thread-3>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-3>
<Thread-3>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-3>
<Thread-3>
sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-3>
<Thread-3>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-3>
<Thread-3>
sun/font/FontManager.registerDeferredJREFonts:(Ljava/lang/String;)V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-3>
<Thread-3>
sun/font/FontManager.initialiseDeferredFonts:()V-sun/font/FontManager.initialiseDeferredFont:(Ljava/lang/String;)Lsun/font/PhysicalFont;-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontManager.loadLocaleNames:()V-sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V
</Thread-3>
<Thread-3>
sun/font/FontManager.deRegisterBadFont:(Lsun/font/Font2D;)V-sun/font/FontManager.getDefaultPhysicalFont:()Lsun/font/PhysicalFont;-sun/font/FontManager.findFont2D:(Ljava/lang/String;II)Lsun/font/Font2D;-sun/font/FontManager.findFont2DAllLocales:(Ljava/lang/String;I)Lsun/font/Font2D;-sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;
</Thread-3>
<Thread-4>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-4>
<Thread-4>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-4>
<Thread-4>
sun/font/FontFamily.getLocaleFamily:(Ljava/lang/String;)Lsun/font/FontFamily;-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getLocalizedObject:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;[Ljava/lang/Object;)Ljava/lang/Object;-sun/util/LocaleServiceProviderPool.getLocalizedObjectImpl:(Lsun/util/LocaleServiceProviderPool$LocalizedObjectGetter;Ljava/util/Locale;ZLsun/util/resources/OpenListResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-4>
<Thread-4>
sun/font/FontFamily.addLocaleNames:(Lsun/font/FontFamily;[Ljava/lang/String;)V-java/lang/String.toLowerCase:()Ljava/lang/String;-java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;-java/lang/ConditionalSpecialCasing.toLowerCaseCharArray:(Ljava/lang/String;ILjava/util/Locale;)[C-java/lang/ConditionalSpecialCasing.lookUpTable:(Ljava/lang/String;ILjava/util/Locale;Z)[C-java/lang/ConditionalSpecialCasing.isConditionMet:(Ljava/lang/String;ILjava/util/Locale;I)Z-java/lang/ConditionalSpecialCasing.isFinalCased:(Ljava/lang/String;ILjava/util/Locale;)Z-java/text/BreakIterator.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;-java/text/BreakIterator.getBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-java/text/BreakIterator.createBreakInstance:(Ljava/util/Locale;ILjava/lang/String;Ljava/lang/String;)Ljava/text/BreakIterator;-sun/util/LocaleServiceProviderPool.getPool:(Ljava/lang/Class;)Lsun/util/LocaleServiceProviderPool;-sun/util/LocaleServiceProviderPool."init":(Ljava/lang/Class;)V-java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-4>
<Thread-5>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-5>
<Thread-5>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-5>
<Thread-5>
java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-5>
<Thread-5>
java/util/logging/Logger.getAnonymousLogger:()Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-5>
<Thread-5>
java/util/logging/Logger.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
</Thread-5>
<Thread-5>
java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.demandLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;-java/util/logging/LogManager.addLogger:(Ljava/util/logging/Logger;)Z
</Thread-5>
<Thread-6>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V
</Thread-6>
<Thread-6>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.keys:()Ljava/util/Enumeration;
</Thread-6>
<Thread-6>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V
</Thread-6>
<Thread-6>
java/util/logging/LogManager.setLevelsOnExistingLoggers:()V-java/util/Properties.propertyNames:()Ljava/util/Enumeration;-java/util/Properties.enumerate:(Ljava/util/Hashtable;)V-java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
</Thread-6>
</Cycle-6>
</All-Cycles>
